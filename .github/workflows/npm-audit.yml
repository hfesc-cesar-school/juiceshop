name: Audit de Dependências

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  audit:
    name: Executar npm audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Instalar dependências
        run: |
          if [ -f package-lock.json ]; then
            echo "🚀 package-lock.json encontrado, usando npm ci"
            npm ci
          else
            echo "🔧 package-lock.json não encontrado, usando npm install"
            npm install
          fi

      - name: Gerar relatório de audit
        run: npm audit --json > audit-report.json || true

      - name: Upload do relatório de audit como artefato
        uses: actions/upload-artifact@v4
        with:
          name: audit-report
          path: audit-report.json

      - name: Instalar jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Validar resultados do audit
        run: |
          # Soma total de vulnerabilidades em .metadata.vulnerabilities
          total=$(jq '
            if has("metadata") and .metadata.vulnerabilities
            then reduce .metadata.vulnerabilities[] as $v (0; . + $v)
            else 0 end
          ' audit-report.json)

          if [ "$total" -eq 0 ]; then
            echo "✅ Nenhuma vulnerabilidade encontrada pelo npm audit"
          else
            echo "❌ npm audit encontrou $total vulnerabilidades:"
            jq -r '
              (.advisories? // {})    # fallback para objeto vazio se advisories não existir
              | .[]                   # itera apenas se houver itens
              | "\(.severity) em \(.module_name) – \(.title):
                versões vulneráveis: \(.vulnerable_versions);
                patch em: \(.patched_versions);
                mais info: \(.url)"
            ' audit-report.json
            exit 1
          fi
