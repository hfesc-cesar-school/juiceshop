name: SonarQube Dynamic Token

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  sonar:
    runs-on: ubuntu-latest

    env:
      SONAR_HOST_URL: http://localhost:9000

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Iniciar SonarQube em background
        run: |
          docker run -d --name sonarqube \
            -p 9000:9000 \
            -e SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true \
            sonarqube:9.9-community

      - name: Aguardar SonarQube “UP”
        run: |
          for i in $(seq 1 60); do
            status=$(curl -s ${SONAR_HOST_URL}/api/system/health | jq -r .status)
            if [ "$status" = "UP" ]; then
              echo "✅ SonarQube está UP após $i tentativas."
              break
            fi
            echo "⏳ Tentativa $i/60 – status atual: $status"
            sleep 5
          done

      - name: Instalar dependências de utilitários
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Gerar token SonarQube na hora
        id: gen-token
        run: |
          # Cria um token chamado 'github-ci-$(date +%s)' para evitar colisões
          NAME="github-ci-$(date +%s)"
          RESPONSE=$(curl -s -u admin:admin \
            -X POST "${SONAR_HOST_URL}/api/user_tokens/generate" \
            -d "name=$NAME")
          TOKEN=$(echo "$RESPONSE" | jq -r .token)
          echo "Token gerado: $TOKEN"
          # Exporta para as próximas etapas
          echo "SONAR_TOKEN=$TOKEN" >> $GITHUB_ENV

      - name: Configurar Java 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '11'

      - name: Baixar e instalar SonarScanner CLI
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
          unzip sonar-scanner-cli-4.8.0.2856-linux.zip
          mv sonar-scanner-4.8.0.2856-linux sonar-scanner
          echo "${GITHUB_WORKSPACE}/sonar-scanner/bin" >> $GITHUB_PATH

      - name: Executar análise SonarQube
        env:
          SONAR_LOGIN: ${{ env.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=hfesc-cesar-juiceshop \
            -Dsonar.projectName="JuiceShop" \
            -Dsonar.sources=. \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_LOGIN

      - name: Parar SonarQube
        if: always()
        run: docker stop sonarqube
