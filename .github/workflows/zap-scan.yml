name: OWASP ZAP Full Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  zap:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Instalar jq & curl
        run: sudo apt-get update && sudo apt-get install -y jq curl

      - name: Criar rede Docker para scan
        run: docker network create zap-net || true

      - name: Subir Juice Shop
        run: |
          docker run -d \
            --network zap-net \
            --name juice-shop \
            -p 3000:3000 \
            bkimminich/juice-shop:latest

      - name: Aguardar Juice Shop UP
        run: |
          timeout 120 bash -c 'until curl -s http://localhost:3000; do sleep 5; done'

      - name: Executar ZAP Full Scan com contexto
        run: |
          docker run --network zap-net \
            -v "${{ github.workspace }}/.github/zap:/zap/context:ro" \
            -v "${{ github.workspace }}:/zap/wrk/:rw" \
            owasp/zap2docker-stable \
            zap-full-scan.py \
              -t http://juice-shop:3000 \
              -c /zap/context/juice-shop.context \
              -r zap-report.html \
              -J zap-report.json

      - name: Validar resultados
        run: |
          count=$(jq '[.site[].alerts[]] | length' zap-report.json)
          if [ "$count" -eq 0 ]; then
            echo "✅ Nenhuma issue encontrada pelo OWASP ZAP"
          else
            echo "❌ OWASP ZAP encontrou $count issues:"
            jq -r '.site[].alerts[] | "\(.risk) em \(.uri):\(.param) → \(.alert)"' zap-report.json
            exit 1
          fi

      - name: Upload OWASP ZAP report
        uses: actions/upload-artifact@v4.6.2
        with:
          name: zap-report
          path: |
            zap-report.json
            zap-report.html

      - name: Limpar containers
        if: always()
        run: docker rm -f juice-shop || true
